{"version":3,"sources":["context/auth-context/auth-context.tsx","context/sticky-header/stickyHeader.tsx","helper/helper-functions/helperFunctions.tsx","components/styles/Header.styled.ts","components/Header.tsx","components/styles/LoadSpinner.styled.ts","components/LoadSpinner.tsx","components/styles/Container.styled.ts","pages/styles/Home.styled.ts","components/styles/Card.styled.ts","components/Card.tsx","components/styles/Footer.styled.ts","components/Footer.tsx","pages/Home.tsx","components/styles/SliderItem.styled.ts","components/SliderItem.tsx","components/Button.tsx","components/styles/Slider.styled.ts","components/Slider.tsx","components/Input.tsx","hooks/use-input/useInput.tsx","hooks/use-axios/useAxios.tsx","pages/styles/Login.styled.ts","pages/Login.tsx","components/styles/Pagination.styled.ts","components/Pagination.tsx","components/styles/PaginationWrapper.styled.ts","components/PaginationWrapper.tsx","components/styles/ListItem.styled.ts","components/ListItem.tsx","components/ListItemWrapper.tsx","components/styles/SocialMedia.styled.ts","components/SocialMedia.tsx","components/styles/ItemCounter.styled.ts","components/ItemCounter.tsx","pages/styles/Expressions.styled.ts","pages/Expressions.tsx","assets/profile-default.png","pages/styles/Profile.styled.ts","pages/Profile.tsx","components/styles/PopUp.styled.ts","components/PopUp.tsx","components/styles/ModalSuccess.styled.ts","components/ModalSuccess.tsx","components/styles/ModalError,styled.ts","components/ModalError.tsx","pages/styles/Registration.styled.ts","pages/Registration.tsx","pages/styles/PhrasalVerbs.styled.ts","helper/scrollUp.ts","pages/PhrasalVerbs.tsx","App.tsx","index.tsx"],"names":["logoutTimer","StickyHeaderContext","React","createContext","intersectingFunction","a","isIntersectingValue","StickyHeaderProvider","props","useState","isInsersecting","setIsInsecting","values","intersecting","Provider","value","children","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContext","AuthContextProvider","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","token","duration","retrieveStoredToken","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","isLoggedIn","login","setItem","logout","StyledHeader","styled","header","Header","authCtx","useContext","history","useHistory","to","exact","activeClassName","className","onClick","replace","StyledLoadSpinner","div","LoadSpinner","Container","HomeWrapper","About","Cards","section","StyledCard","color","Card","aos","aos_offset","text","title","image","data-aos","data-aos-offset","data-aos-easing","data-aos-duration","src","alt","StyledFooter","footer","Footer","id","href","target","rel","Home","scrollIntoView","useRef","Aos","init","motion","button","whileTap","scale","whileHover","e","preventDefault","current","behavior","StyledSliderItem","starNumbers","SliderItem","sliderItem","style","name","profession","map","Button","StyledSlider","Slider","n1","n2","n3","slider","setSlider","reset","direction","timer","setInterval","prev","previous","clearInterval","slider_1","transform","slider_2","slider_3","event","Input","type","placeholder","onBlur","onChange","onMouseEnter","onMouseLeave","useInput","validate","enteredValue","setEnteredValue","isTouched","setIsTouched","isValid","errorMessage","hasError","valueChangeHandler","currentTarget","inputBlurHandler","useAxios","isLoading","setIsLoading","setHasError","sendRequest","arg","apply","Axios","method","url","data","headers","then","response","catch","err","StyledLoginWrapper","StyledLogin","Login","formIsValid","setFormIsValid","email","password","focus","setFocus","trim","includes","enteredEmail","emailErrorMessage","enteredEmailHasError","emailChangeHandler","emailBlurHandler","emailIsValid","resetEmailInput","length","enteredPassword","passwordErrorMessage","passwordHasError","passwordChangeHandler","passwordBlurHandler","passwordIsValid","resetPasswordInput","emailInput","passwordInput","btn_signup","btn_login","onSubmit","returnSecureToken","expiresIn","idToken","toISOString","StyledPagination","ul","Pagination","pageNumbers","i","Math","ceil","totalPosts","postsPerPage","push","number","maxPageNumberLimit","minPageNumberLimit","currentPage","paginate","StyledPaginationWrapper","PaginationWrapper","prevPageHandler","pageDecrementBtn","postPerPage","pageIncrementBtn","nextPageHandler","StyledListItem","ListItem","currentId","example_1","example_2","translation_1","translation_2","content","onDisplayTranslation","onHideTranslation","ListItemWrapper","currentPosts","currentTransationId","displayTranslation","hideTranslation","item","index","_id","StyledSocialMedia","SocialMedia","StyledItemCounter","p","ItemCounter","counter","StyledExpression","Expressions","setCurrentTranslationId","setMaxPageNumberLimit","setMinPageNumberLimit","setCurrentPage","pageNumberLimit","expressions","setExpressions","indexOfLastPosts","indexOfFirstPost","slice","pageNumber","StyledProfile","StyledProfileWrapper","Profile","resetPassword","enteredPasswordValue","passwordCheckBlurHandler","passwordCheckChangeHandler","resetPasswordCheck","passwordCheckHasError","passwordCheckIsValid","enteredPasswordCheckValue","passwordCheckErrorMessage","profile_picture","enteredNewPassword","alert","StyledPopUp","StyledBackdrop","portalElement","document","getElementById","dropIn","hidden","y","x","opacity","visible","transition","damping","stiffness","exit","Backdrop","initial","animate","PopUp","variants","stopPropagation","ModalOverlay","Fragment","ReactDOM","createPortal","onBackdropClick","StyledModalSuccess","ModalSuccess","btnText","message","onCloseModal","StyledModalError","ModalError","StyledRegistrationWrapper","StyledRegistration","Registration","displayModal","setDisplayModal","enteredUsername","enteredNameIsValid","usernameErrorMessage","usernameHasError","usernameBlurHander","usernameChangeHandler","resetNameInput","enteredEmailIsValid","emailHasError","enteredPasswordIsValid","passswordHasError","enteredPasswordCheck","enteredPasswordCheckIsValid","resetPasswordCheckInput","closeModal","usernameClasses","emailClasses","passwordClasses","passwordCheckClasses","AnimatePresence","exitBeforeEnter","onExitComplete","StyledPhrasalVerbs","scrollUp","window","scroll","PhrasalVerbs","phrasalVerbs","setPhrasalVerbs","App","fallback","path","render"],"mappings":"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","file":"static/js/main.af4bfbd2.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n    calculateRemainingTime,\r\n    retrieveStoredToken,\r\n} from '../../helper/helper-functions/helperFunctions';\r\n\r\ninterface IAuthContext {\r\n    token: string | null;\r\n    isLoggedIn: boolean;\r\n    login: (token: string, expirationTime: string) => void;\r\n    logout: () => void;\r\n}\r\n\r\ninterface IProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nlet logoutTimer: any;\r\n\r\nexport const AuthContext = React.createContext({} as IAuthContext);\r\nconst AuthContextProvider = (props: IProps) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken: any;\r\n    if (tokenData) {\r\n        initialToken = tokenData?.token;\r\n    }\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken('');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n\r\n        if (logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, []);\r\n\r\n    const loginHandler = (token: string, expirationTime: string) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            console.log(tokenData);\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [logoutHandler, tokenData]);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React, { ReactNode, useState } from 'react';\r\ninterface IProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const StickyHeaderContext = React.createContext({\r\n    intersectingFunction: (a: boolean) => {},\r\n    isIntersectingValue: false,\r\n});\r\n\r\nconst StickyHeaderProvider = (props: IProps) => {\r\n    const [isInsersecting, setIsInsecting] = useState(false);\r\n\r\n    const setIntersecting = (intersecting: boolean) => {\r\n        setIsInsecting(intersecting);\r\n    };\r\n\r\n    const values = {\r\n        intersectingFunction: setIntersecting,\r\n        isIntersectingValue: isInsersecting,\r\n    };\r\n\r\n    return (\r\n        <StickyHeaderContext.Provider value={values}>\r\n            {props.children}\r\n        </StickyHeaderContext.Provider>\r\n    );\r\n};\r\n\r\nexport default StickyHeaderProvider;\r\n","export const calculateRemainingTime = (expirationTime: any) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainigDuration = adjExpirationTime - currentTime;\r\n    return remainigDuration;\r\n};\r\n\r\nexport const retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 60000) {\r\n        localStorage.removeItem('expirationTime');\r\n        localStorage.removeItem('token');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime,\r\n    };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.header`\r\n    padding: 10px 60px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    background: rgb(9, 74, 130);\r\n    // &.sticky {\r\n    //     position: fixed;\r\n    //     width: 100%;\r\n    //     max-width: 1440px;\r\n    //     z-index: 1;\r\n    //     background: rgba(9, 74, 130, 0.6);\r\n    // }\r\n    h1 {\r\n        font-weight: 600;\r\n        letter-spacing: 1px;\r\n        font-size: 2rem;\r\n    }\r\n\r\n    ul {\r\n        list-style: none;\r\n        display: flex;\r\n        align-items: flex-end;\r\n        & :not(:last-child) {\r\n            margin-right: 30px;\r\n        }\r\n        li {\r\n            cursor: pointer;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            align-items: center;\r\n            height: 32px;\r\n            a {\r\n                text-decoration: none;\r\n                height: 30px;\r\n                padding-bottom: 2px;\r\n                color: inherit;\r\n                display: flex;\r\n                align-items: center;\r\n                border-bottom: 3px solid transparent;\r\n                transition: 0.1s ease-in-out;\r\n                &:hover {\r\n                    color: rgb(223, 221, 221);\r\n                }\r\n\r\n                &.header__menu--active {\r\n                    border-bottom: 3px solid white;\r\n                }\r\n            }\r\n\r\n            .header__icon {\r\n                font-size: 25px;\r\n                margin: 0;\r\n                margin-right: 5px;\r\n            }\r\n            /* .button {\r\n                cursor: pointer;\r\n                color: inherit;\r\n                font-size: inherit;\r\n                background: none;\r\n                border: none;\r\n                border-radius: 4px;\r\n                padding-left: 5px;\r\n            } */\r\n        }\r\n    }\r\n`;\r\n","// import classes from \"./styles/Header.module.css\";\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport React, { useContext } from 'react';\r\nimport { StickyHeaderContext } from '../context/sticky-header/stickyHeader';\r\nimport { IoIosContact } from 'react-icons/io';\r\nimport { AuthContext } from '../context/auth-context/auth-context';\r\nimport { StyledHeader } from './styles/Header.styled';\r\n\r\nconst Header = () => {\r\n    const authCtx = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const isLoggedIn = authCtx.isLoggedIn;\r\n    const logoutHandler = () => {\r\n        authCtx.logout();\r\n        history.replace('/login');\r\n    };\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <h1>English for devs</h1>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink\r\n                            to=\"/\"\r\n                            exact\r\n                            activeClassName={'header__menu--active'}\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            to=\"/phrasal-verbs\"\r\n                            activeClassName={'header__menu--active'}\r\n                        >\r\n                            Phrasal verbs\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    {isLoggedIn && (\r\n                        <li>\r\n                            <NavLink\r\n                                to=\"/expressions\"\r\n                                activeClassName={'header__menu--active'}\r\n                            >\r\n                                Expressões\r\n                            </NavLink>\r\n                        </li>\r\n                    )}\r\n                    {!isLoggedIn && (\r\n                        <li>\r\n                            <NavLink\r\n                                to=\"/login\"\r\n                                activeClassName={'header__menu--active'}\r\n                            >\r\n                                <IoIosContact className={'header__icon'} />{' '}\r\n                                Entrar\r\n                            </NavLink>\r\n                        </li>\r\n                    )}\r\n                    {isLoggedIn && (\r\n                        <li>\r\n                            <NavLink\r\n                                to=\"/profile\"\r\n                                activeClassName={'header__menu--active'}\r\n                            >\r\n                                Perfil\r\n                            </NavLink>\r\n                        </li>\r\n                    )}\r\n                    {isLoggedIn && (\r\n                        <li onClick={logoutHandler}>\r\n                            <NavLink\r\n                                to=\"/logout\"\r\n                                activeClassName={'header__menu--active'}\r\n                            >\r\n                                Sair\r\n                            </NavLink>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLoadSpinner = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    div {\r\n        width: 80px;\r\n        height: 80px;\r\n        border: 5px solid rgb(5, 83, 151);\r\n        border-radius: 50%;\r\n        border-top-color: rgb(162, 211, 253);\r\n        position: absolute;\r\n        animation: spin 1s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { StyledLoadSpinner } from './styles/LoadSpinner.styled';\r\n\r\nexport default function LoadSpinner() {\r\n    return (\r\n        <StyledLoadSpinner >\r\n            <div/>\r\n        </StyledLoadSpinner>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    /* width: 1440px;\r\n    max-width: 100%; */\r\n    /* padding: 0 20px;\r\n    margin: 0 auto; */\r\n`;","import styled from 'styled-components';\r\n\r\nexport const HomeWrapper = styled.div`\r\n    .home__footer{\r\n        padding: 15px 60px;\r\n        background: rgb(11, 91, 160);\r\n        color: white;\r\n        bottom: 0;\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const About = styled.div`\r\n    /* width: 1440px; */\r\n    min-height: calc(100vh - 58px);\r\n    background: rgb(9, 74, 130);\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: white;\r\n    padding: 40px 60px;\r\n    position: relative;\r\n\r\n    span:first-of-type {\r\n        color: #12d8c1;\r\n    }\r\n\r\n    span:last-of-type {\r\n        animation: outdoor 1.5s linear infinite;\r\n        transition: 0.4s ease-in-out;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 1.4rem;\r\n        line-height: 1.5;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    img {\r\n        width: 40%;\r\n    }\r\n\r\n    & > div {\r\n        max-width: 650px;\r\n    }\r\n\r\n    .home__buttons {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        .home__btn--about {\r\n            background: #58cc02;\r\n        }\r\n\r\n        button {\r\n            padding: 10px;\r\n            width: 200px;\r\n            border: none;\r\n            border-radius: 4px;\r\n            text-transform: uppercase;\r\n            font-size: 0.9rem;\r\n            font-weight: bolder;\r\n            cursor: pointer;\r\n            color: #fff;\r\n            box-shadow: 3px 3px 6px rgb(0 0 0 / 50%);\r\n        }\r\n\r\n        .home__btn--about {\r\n            background: #58cc02;\r\n            margin: 40px 0 20px;\r\n        }\r\n\r\n        .home__btn--signup {\r\n            background: #1899d6;\r\n        }\r\n    }\r\n\r\n    .home__arrow {\r\n        width: 70px;\r\n        position: absolute;\r\n        right: 50%;\r\n        bottom: -30px;\r\n    }\r\n\r\n    @keyframes outdoor {\r\n        0% {\r\n            color: white;\r\n        }\r\n\r\n        50% {\r\n            color: rgb(250, 118, 118);\r\n        }\r\n\r\n        100% {\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Cards = styled.section`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 200px 60px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\ninterface Iprops {\r\n    color: string;\r\n}\r\n\r\nexport const StyledCard = styled.div`\r\n    width: 350px;\r\n    border: 1px solid\r\n        ${(props: { color: string }) =>\r\n            (props.color === 'red' && 'rgb(225, 54, 94)') ||\r\n            (props.color === 'blue' && 'rgb(12, 226, 249)') ||\r\n            (props.color === 'purple' && 'rgb(123, 87, 246)')};\r\n\r\n    img {\r\n        width: 100%;\r\n        max-height: 200px;\r\n        object-fit: cover;\r\n    }\r\n\r\n    p {\r\n        color: rgb(136, 136, 136);\r\n        margin-top: -19px;\r\n        padding: 20px;\r\n        line-height: 1.5;\r\n    }\r\n\r\n    h2 {\r\n        color: ${(props: { color: string }) =>\r\n            (props.color === 'red' && 'rgb(225, 54, 94)') ||\r\n            (props.color === 'blue' && 'rgb(12, 226, 249)') ||\r\n            (props.color === 'purple' && 'rgb(123, 87, 246)')};\r\n        padding: 10px 20px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { StyledCard } from './styles/Card.styled'\r\n\r\ninterface Icard {\r\n    aos: string;\r\n    aos_offset: string;\r\n    color: string;\r\n    title: string;\r\n    text: string;\r\n    image: string;\r\n}\r\n\r\nexport default function Card(props: Icard) {\r\n    const { aos, aos_offset, color, text, title, image } = props\r\n\r\n    return (\r\n        <StyledCard\r\n            color={color}\r\n            data-aos={aos}\r\n            data-aos-offset={aos_offset}\r\n            data-aos-easing=\"ease-in-sine\"\r\n            data-aos-duration=\"600\"\r\n        >\r\n            <img src={image} alt=\"tripBG\" />\r\n            <div>\r\n                <h2> {title} </h2>\r\n                <p>\r\n                    {text}\r\n                </p>\r\n            </div>\r\n        </StyledCard>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.footer`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 17px;\r\n    color: white;\r\n    width: 100%;\r\n    #copyright {\r\n        margin: 0 3px 0 10px;\r\n    }\r\n    .social-media {\r\n        font-size: 23px;\r\n        a {\r\n            cursor: pointer;\r\n            color: inherit;\r\n            text-decoration: none;\r\n            &:first-child {\r\n                margin: 0 7px 0 30px;\r\n                font-size: 25px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","// import classes from \"./styles/Footer.module.css\";\r\nimport { AiOutlineGithub } from \"react-icons/ai\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport { AiOutlineCopyrightCircle } from \"react-icons/ai\";\r\nimport { StyledFooter } from './styles/Footer.styled'\r\n\r\ninterface IFooter {\r\n\tclassName?: string;\r\n}\r\n\r\nconst Footer = (props: IFooter) => {\r\n\treturn (\r\n\t\t<StyledFooter className={`${props.className}`}>\r\n\t\t\tDesenvolvedor <AiOutlineCopyrightCircle id={'copyright'} />\r\n\t\t\tVictor Lira\r\n\t\t\t<div className={\"social-media\"}>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/VictorLira-DEV\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AiOutlineGithub />\r\n\t\t\t\t</a>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"http://api.whatsapp.com/send?phone=552799483376\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<BsWhatsapp />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</StyledFooter>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Container } from '../components/styles/Container.styled';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { About, Cards, HomeWrapper } from './styles/Home.styled';\r\nimport Card from '../components/Card';\r\nimport { motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Home = () => {\r\n    const scrollIntoView = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        Aos.init();\r\n    }, []);\r\n\r\n    const scroll = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        scrollIntoView.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <HomeWrapper>\r\n            <Container>\r\n                <About>\r\n                    <img\r\n                        src=\"./adventure.svg\"\r\n                        alt=\"adventureBG\"\r\n                        data-aos=\"fade-right\"\r\n                        data-aos-offset=\"200\"\r\n                        data-aos-easing=\"ease-in-sine\"\r\n                        data-aos-duration=\"600\"\r\n                    />\r\n                    <div\r\n                        data-aos=\"fade-left\"\r\n                        data-aos-offset=\"200\"\r\n                        data-aos-easing=\"ease-in-sine\"\r\n                        data-aos-duration=\"600\"\r\n                    >\r\n                        <h1>\r\n                            Aprenda os phrasal verbs e as expressões mais usadas\r\n                            do inglês, de forma\r\n                            <span> totalmente gratuita </span>, será necessário\r\n                            o <span />\r\n                            <span>\r\n                                cadastro para ter acesso ao material sobre\r\n                                \"expressões\"\r\n                            </span>\r\n                        </h1>\r\n                        <div>\r\n                            <div className=\"home__buttons\">\r\n                                <motion.button\r\n                                    whileTap={{ scale: 0.9 }}\r\n                                    whileHover={{ scale: 1.1 }}\r\n                                    onClick={scroll}\r\n                                    className=\"home__btn--about\"\r\n                                >\r\n                                    Sobre\r\n                                </motion.button>\r\n\r\n                                <Link to=\"/login\">\r\n                                    <motion.button\r\n                                        whileTap={{ scale: 0.9 }}\r\n                                        whileHover={{ scale: 1.1 }}\r\n                                        className=\"home__btn--signup\"\r\n                                    >\r\n                                        Ja tenho um conta\r\n                                    </motion.button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <img className=\"home__arrow\" src=\"./arrow.png\" />\r\n                </About>\r\n            </Container>\r\n            <Cards>\r\n                <Card\r\n                    image=\"./grecia.png\"\r\n                    aos=\"fade-right\"\r\n                    aos_offset=\"200\"\r\n                    title=\"Viagens\"\r\n                    color=\"red\"\r\n                    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Doloribus quasi perferendis ducimus. Sed aperiam neque\r\n                    inventore modi architecto quae saepe unde perferendis fugit\r\n                    ex nisi beatae debitis iste, quasi voluptatibus?\"\r\n                />\r\n                <Card\r\n                    image=\"./promotion.png\"\r\n                    aos=\"fade-down\"\r\n                    aos_offset=\"200\"\r\n                    title=\"Elevação na carreira\"\r\n                    color=\"blue\"\r\n                    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Doloribus quasi perferendis ducimus. Sed aperiam neque\r\n                    inventore modi architecto quae saepe unde perferendis fugit\r\n                    ex nisi beatae debitis iste, quasi voluptatibus?\"\r\n                />\r\n                <Card\r\n                    image=\"./conhecimento.png\"\r\n                    aos=\"fade-left\"\r\n                    aos_offset=\"200\"\r\n                    title=\"Acesso a Informações\"\r\n                    color=\"purple\"\r\n                    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Doloribus quasi perferendis ducimus. Sed aperiam neque\r\n                    inventore modi architecto quae saepe unde perferendis fugit\r\n                    ex nisi beatae debitis iste, quasi voluptatibus?\"\r\n                />\r\n            </Cards>\r\n            <Footer className=\"home__footer\" />\r\n        </HomeWrapper>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSliderItem = styled.div`\r\n    color: white;\r\n    padding: 40px;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    #quotes-mark {\r\n        font-size: 25px;\r\n    }\r\n\r\n    p:last-of-type {\r\n        margin-top: 20px;\r\n        line-height: 2;\r\n    }\r\n    .profile {\r\n        text-align: center;\r\n        img {\r\n            width: 100px;\r\n            height: 100px;\r\n            border-radius: 50%;\r\n            border: 3px solid white;\r\n            margin: 20px 0 10px 0;\r\n        }\r\n        .stars {\r\n            color: rgb(218, 218, 40);\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n`;\r\n","// import classes from './styles/SliderItem.module.css';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { FaQuoteLeft } from 'react-icons/fa';\r\nimport { StyledSliderItem } from './styles/SliderItem.styled';\r\n\r\ninterface ISliderItem {\r\n    src?: string;\r\n    name?: string;\r\n    profession?: string;\r\n    className: string;\r\n    style: any;\r\n    sliderItem: string;\r\n}\r\n\r\nlet starNumbers = [1, 2, 3, 4, 5];\r\n\r\nconst SliderItem = (props: ISliderItem) => {\r\n    const { className, sliderItem, style, name, profession, src } = props;\r\n\r\n    return (\r\n        <StyledSliderItem className={className} style={style}>\r\n            <FaQuoteLeft id={'quotes-mark'} />\r\n            <div className={'profile'}>\r\n                <img src={src} alt=\"testimimonial-profile\" />\r\n                <div>\r\n                    {starNumbers.map(() => {\r\n                        return <AiFillStar className={'stars'} />;\r\n                    })}\r\n                </div>\r\n                <p>{name} </p>\r\n                <p>{profession}</p>\r\n            </div>\r\n            <p>{sliderItem}</p>\r\n        </StyledSliderItem>\r\n    );\r\n};\r\n\r\nexport default SliderItem;\r\n","import React from \"react\";\r\n\r\ninterface IButton {\r\n    children: any;\r\n    onClick?: (event: React.FormEvent) => void;\r\n    className?: string;\r\n    id?: string;\r\n}\r\nconst Button = (props: IButton) => {\r\n    const { children, className, id, onClick } = props\r\n\r\n    return <button onClick={onClick} className={className}>{children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSlider = styled.div`\r\n    width: 400px;\r\n    height: 100%;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    .controls {\r\n        position: absolute;\r\n        bottom: 50%;\r\n        width: 100%;\r\n        z-index: 4;\r\n        bottom: 32%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 0 20px;\r\n        bottom: 50%;\r\n        transform: translateY(50%);\r\n\r\n        button {\r\n            background: transparent;\r\n            border: none;\r\n            cursor: pointer;\r\n            font-size: 30px;\r\n            font-weight: bold;\r\n            color: white;\r\n            width: 50px;\r\n            height: 50px;\r\n        }\r\n    }\r\n\r\n    .slide-content {\r\n        background: rgb(35, 59, 93);\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        overflow: hidden;\r\n        height: 504px;\r\n\r\n        .slider_item {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n            transition: 1s;\r\n            height: 505px;\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SliderItem from './SliderItem';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\nimport Button from './Button';\r\nimport { StyledSlider } from './styles/Slider.styled';\r\n\r\nconst Slider = () => {\r\n    const [slider, setSlider] = useState({\r\n        n1: 0,\r\n        n2: -100,\r\n        n3: -200,\r\n    });\r\n\r\n    const moveToLeft = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        setSlider(prev => {\r\n            const previous = { ...prev };\r\n            return {\r\n                n1: previous.n1 + 100,\r\n                n2: previous.n2 + 100,\r\n                n3: previous.n3 + 100,\r\n            };\r\n        });\r\n    };\r\n\r\n    const moveToRight = (event: React.FormEvent) => {\r\n        setSlider(prev => {\r\n            const previous = { ...prev };\r\n            return {\r\n                n1: previous.n1 - 100,\r\n                n2: previous.n2 - 100,\r\n                n3: previous.n3 - 100,\r\n            };\r\n        });\r\n    };\r\n\r\n    const sliderTimer = () => {\r\n        setSlider(prev => {\r\n            const previous = { ...prev };\r\n            return {\r\n                n1: previous.n1 + 100,\r\n                n2: previous.n2 + 100,\r\n                n3: previous.n3 + 100,\r\n            };\r\n        });\r\n    };\r\n\r\n    const reset = (direction: string) => {\r\n        if (direction === 'right') {\r\n            setSlider(() => {\r\n                return {\r\n                    n1: 0,\r\n                    n2: -100,\r\n                    n3: -200,\r\n                };\r\n            });\r\n        } else {\r\n            setSlider(() => {\r\n                return {\r\n                    n1: 200,\r\n                    n2: 100,\r\n                    n3: 0,\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            sliderTimer();\r\n        }, 6000);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [slider]);\r\n\r\n    //hardcoded slider because the \"src\" is not comming from  a API\r\n    let slider_1 = {\r\n        transform: `translateX(${slider.n1 < 0 ? reset('left') : slider.n1}%)`,\r\n    };\r\n    let slider_2 = { transform: `translateX(${slider.n2}%)` };\r\n    let slider_3 = {\r\n        transform: `translateX(${slider.n3 > 0 ? reset('right') : slider.n3}%)`,\r\n    };\r\n\r\n    return (\r\n        <StyledSlider>\r\n            <div className=\"controls\">\r\n                <Button id=\"left\" onClick={moveToLeft}>\r\n                    <BsArrowLeft />\r\n                </Button>\r\n                <Button id=\"right\" onClick={moveToRight}>\r\n                    <BsArrowRight />\r\n                </Button>\r\n            </div>\r\n            <div className={'slide-content'}>\r\n                <SliderItem\r\n                    className=\"slider_item\"\r\n                    style={slider_1}\r\n                    src={'https://randomuser.me/api/portraits/women/3.jpg'}\r\n                    name=\"Karol dias.\"\r\n                    profession=\"Developer\"\r\n                    sliderItem=\"Interface simples e limpa, muito obrigada, consegui aprender mais expressões para compreender os falantes nativos\"\r\n                />\r\n                <SliderItem\r\n                    className=\"slider_item\"\r\n                    style={slider_2}\r\n                    src={'https://randomuser.me/api/portraits/women/32.jpg'}\r\n                    name=\"Luna Davys\"\r\n                    profession=\"Lawyer\"\r\n                    sliderItem=\"Continue adicionando mais phrasal verbs! está me ajudando muito\"\r\n                />\r\n                <SliderItem\r\n                    className=\"slider_item\"\r\n                    style={slider_3}\r\n                    src={'https://randomuser.me/api/portraits/men/3.jpg'}\r\n                    name=\"Robert Silvester\"\r\n                    profession=\"Designer\"\r\n                    sliderItem=\"Muito bom, essas expressões e phrasal verbs realmente são muito usado no dia a dia\"\r\n                />\r\n            </div>\r\n        </StyledSlider>\r\n    );\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\n\r\ninterface IInput {\r\n    placeholder?: string;\r\n    className?: string;\r\n    type: string;\r\n    value: string;\r\n    onMouseEnter?: () => void;\r\n    onMouseLeave?: () => void;\r\n    onChange?: (e: React.FormEvent<HTMLInputElement>) => void;\r\n    onBlur?: () => void;\r\n}\r\n\r\nconst Input = (props: IInput) => {\r\n    const {\r\n        type,\r\n        className,\r\n        value,\r\n        placeholder,\r\n        onBlur,\r\n        onChange,\r\n        onMouseEnter,\r\n        onMouseLeave,\r\n    } = props;\r\n\r\n    return (\r\n        <input\r\n            placeholder={placeholder}\r\n            className={className}\r\n            type={type}\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\n\r\nconst useInput = (\r\n    validate: (a: string) => { isValid: boolean; errorMessage: string }\r\n) => {\r\n    const [enteredValue, setEnteredValue] = useState(\"\");\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const { isValid, errorMessage } = validate(enteredValue);\r\n    const hasError = !isValid && isTouched;\r\n\r\n    const valueChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n        setEnteredValue(event.currentTarget.value);\r\n    };\r\n\r\n    const inputBlurHandler = () => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue(\"\");\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: isValid,\r\n        errorMessage: errorMessage,\r\n        hasError: hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset,\r\n    };\r\n};\r\n\r\nexport default useInput;\r\n","import Axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\ninterface IuseAxios {\r\n    method?: any;\r\n    url?: string;\r\n    data?: {};\r\n    headers?: {};\r\n}\r\n\r\nconst useAxios = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasError, setHasError] = useState(false)\r\n\r\n    const sendRequest = (arg: IuseAxios, apply: (a: any) => void) => {\r\n        setIsLoading(true);\r\n        Axios({\r\n            method: arg.method ? arg.method : \"get\",\r\n            url: arg.url ? arg.url : \"\",\r\n            data: arg.data ? arg.data : null,\r\n            headers: arg.headers ? arg.headers : {},\r\n        })\r\n            .then((response) => {\r\n                setHasError(false)\r\n                setIsLoading(false);\r\n                apply(response);\r\n            })\r\n            .catch((err) => {\r\n                setHasError(true)\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    return {\r\n        sendRequest,\r\n        isLoading,\r\n        hasError,\r\n        setHasError\r\n    };\r\n};\r\n\r\nexport default useAxios;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLoginWrapper = styled.div`\r\n    .footer {\r\n        padding: 30px 60px;\r\n        background: linear-gradient(rgb(88, 129, 187), rgb(62, 91, 131));\r\n    }\r\n`;\r\n\r\nexport const StyledLogin = styled.div`\r\n    background: linear-gradient(rgb(9, 74, 130), rgb(88, 129, 187));\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: calc(101vh - (58px + 98px));\r\n    .wrapper {\r\n        display: flex;\r\n        height: auto;\r\n        background: rgb(35, 59, 93);\r\n        border-radius: 5px;\r\n        .slider {\r\n            width: 350px;\r\n            position: relative;\r\n            .control {\r\n                position: absolute;\r\n                z-index: 3;\r\n            }\r\n            .slider-item {\r\n                position: absolute;\r\n                width: 100%;\r\n                height: 100%;\r\n                background: red;\r\n            }\r\n        }\r\n\r\n        form {\r\n            width: 400px;\r\n            border: 1px solid #ccc;\r\n            padding: 30px 40px 40px 40px;\r\n            background: white;\r\n            border-top-right-radius: 5px;\r\n            border-bottom-right-radius: 5px;\r\n            text-align: center;\r\n            h2 {\r\n                margin-bottom: 20px;\r\n                text-align: center;\r\n            }\r\n            .form-control {\r\n                // display: flex;\r\n                // flex-direction: column;\r\n                padding-bottom: 35px;\r\n\r\n                .inputWrapper {\r\n                    border: 2px solid white;\r\n                    border-bottom-color: rgb(177, 177, 177);\r\n                    display: flex;\r\n                    position: relative;\r\n                    align-items: center;\r\n                    &.invalid {\r\n                        border-bottom-color: rgb(247, 132, 132);\r\n                        .icon {\r\n                            color: rgb(247, 132, 132);\r\n                        }\r\n\r\n                        small {\r\n                            color: red;\r\n                        }\r\n                    }\r\n\r\n                    &.focus {\r\n                        border: 2px solid rgb(95, 210, 255);\r\n                        background: rgb(224, 241, 248);\r\n                    }\r\n                    .icon {\r\n                        width: 30px;\r\n                        font-size: 20px;\r\n                        color: rgb(121, 121, 121);\r\n                    }\r\n                    input {\r\n                        padding: 10px;\r\n                        width: 93%;\r\n                        outline: none;\r\n                        border: none;\r\n                        font-size: 16px;\r\n                        background: transparent;\r\n                    }\r\n\r\n                    small {\r\n                        position: absolute;\r\n                        bottom: -22px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            p {\r\n                &:nth-of-type(1) {\r\n                    text-align: center;\r\n                    margin-top: 20px;\r\n                    height: 20px;\r\n                    color: rgb(117, 117, 117);\r\n                    &::after {\r\n                        content: '';\r\n                        display: inline-block;\r\n                        width: 40%;\r\n                        margin: 0 0 3px 10px;\r\n                        height: 2px;\r\n                        background: #ccc;\r\n                    }\r\n                    &::before {\r\n                        content: '';\r\n                        display: inline-block;\r\n                        margin: 0 10px 3px 0px;\r\n                        width: 40%;\r\n                        height: 2px;\r\n                        background: #ccc;\r\n                    }\r\n                }\r\n\r\n                &:nth-of-type(2) {\r\n                    margin-top: 20px;\r\n                    color: rgb(57, 87, 255);\r\n                    cursor: pointer;\r\n                    height: 30px;\r\n                    &:hover {\r\n                        margin-bottom: 0;\r\n                        &::after {\r\n                            content: '';\r\n                            display: block;\r\n                            margin: 5px auto 0 auto;\r\n                            width: 150px;\r\n                            height: 2px;\r\n                            background: rgb(195, 203, 252);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .btn {\r\n                border: none;\r\n                font-size: inherit;\r\n                border-radius: 5px;\r\n                cursor: pointer;\r\n                box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.5);\r\n                // transition: 0.3s ease-in-out;\r\n                text-transform: uppercase;\r\n                font-weight: bolder;\r\n                font-size: 14px;\r\n                letter-spacing: 1px;\r\n                &.login {\r\n                    color: white;\r\n                    width: 100%;\r\n                    background: rgb(2, 127, 239);\r\n                    height: 40px;\r\n                    margin-top: 20px;\r\n                    position: relative;\r\n                    &.invalidBtn {\r\n                        background: rgb(194, 194, 194);\r\n                        cursor: not-allowed;\r\n                        &:hover {\r\n                            background: rgb(194, 194, 194);\r\n                        }\r\n                    }\r\n\r\n                    & :last-child {\r\n                        font-size: 18px;\r\n                        position: absolute;\r\n                        right: 10px;\r\n                        transform: translateY(-2%);\r\n                    }\r\n\r\n                    &:hover {\r\n                        background: rgb(59, 157, 243);\r\n                    }\r\n                }\r\n\r\n                &.create-account {\r\n                    margin-top: 20px;\r\n                    color: white;\r\n                    height: 40px;\r\n                    background: rgb(106, 163, 67);\r\n                    width: 100%;\r\n                    justify-self: center;\r\n                    position: relative;\r\n                    & :last-child {\r\n                        color: white;\r\n                        position: absolute;\r\n                        font-size: 20px;\r\n                        right: 10px;\r\n                    }\r\n\r\n                    &:hover {\r\n                        background: rgb(121, 182, 81);\r\n                    }\r\n\r\n                    a {\r\n                        text-decoration: none;\r\n                        color: inherit;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","// import classes from './styles/Login.module.css';\r\n// import Button from '../components/Button';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\nimport { MdOutlineEmail } from 'react-icons/md';\r\nimport { BsArrowRightCircle } from 'react-icons/bs';\r\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\r\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { AuthContext } from '../context/auth-context/auth-context';\r\nimport Slider from '../components/Slider';\r\nimport Input from '../components/Input';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport useInput from '../hooks/use-input/useInput';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAxios from '../hooks/use-axios/useAxios';\r\nimport { StickyHeaderContext } from '../context/sticky-header/stickyHeader';\r\nimport { motion } from 'framer-motion';\r\nimport { StyledLogin, StyledLoginWrapper } from './styles/Login.styled';\r\n\r\nconst Login = () => {\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const history = useHistory();\r\n    const authCtx = useContext(AuthContext);\r\n    const { sendRequest, isLoading, hasError } = useAxios();\r\n    const [focus, setFocus] = useState({\r\n        email: false,\r\n        password: false,\r\n    });\r\n\r\n    // const headerCtx = useContext(StickyHeaderContext);\r\n    // headerCtx.intersectingFunction(false);\r\n\r\n    // //EMAIL\r\n    const validateEmail = (value: string) => {\r\n        return {\r\n            isValid: value.trim().includes('@'),\r\n            errorMessage: 'E-mail invalido',\r\n        };\r\n    };\r\n    const {\r\n        value: enteredEmail,\r\n        errorMessage: emailErrorMessage,\r\n        hasError: enteredEmailHasError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailBlurHandler,\r\n        isValid: emailIsValid,\r\n        reset: resetEmailInput,\r\n    } = useInput(validateEmail);\r\n\r\n    //PASSWORD\r\n    const validatePassword = (value: string) => {\r\n        return {\r\n            isValid: value.trim().length > 5,\r\n            errorMessage: 'A senha deve conter pelo menos 6 caracteres',\r\n        };\r\n    };\r\n    const {\r\n        value: enteredPassword,\r\n        errorMessage: passwordErrorMessage,\r\n        hasError: passwordHasError,\r\n        valueChangeHandler: passwordChangeHandler,\r\n        inputBlurHandler: passwordBlurHandler,\r\n        isValid: passwordIsValid,\r\n        reset: resetPasswordInput,\r\n    } = useInput(validatePassword);\r\n\r\n    const emailMouseEnterHandler = () => {\r\n        setFocus(() => {\r\n            return { email: true, password: false };\r\n        });\r\n    };\r\n\r\n    const emailMouseLeaveHandler = () => {\r\n        setFocus(() => {\r\n            return { email: false, password: false };\r\n        });\r\n    };\r\n\r\n    //password\r\n    const passwordEnterHandler = () => {\r\n        setFocus(() => {\r\n            return { email: false, password: true };\r\n        });\r\n    };\r\n\r\n    const passwordLeaveHandler = () => {\r\n        setFocus(() => {\r\n            return { email: false, password: false };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormIsValid(emailIsValid && passwordIsValid);\r\n    }, [emailIsValid, passwordIsValid]);\r\n\r\n    const submitHandler = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n\r\n        if (formIsValid !== true) return;\r\n\r\n        if (hasError) {\r\n            // alert('Ocorreu algo de errado tente mais tarde');\r\n            return;\r\n        }\r\n        const receiveData = async (response: any) => {\r\n            let expiresIn = await response.data.expiresIn;\r\n            let idToken = await response.data.idToken;\r\n\r\n            const expirationTime = new Date(\r\n                new Date().getTime() + +expiresIn * 1000\r\n            );\r\n\r\n            authCtx.login(idToken, expirationTime.toISOString());\r\n            history.replace('/');\r\n            resetEmailInput();\r\n            resetPasswordInput();\r\n        };\r\n\r\n        sendRequest(\r\n            {\r\n                method: 'post',\r\n                url: 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDhdPtWod30lodKdyjn-U5_DX8rClCz3vw',\r\n                data: {\r\n                    email: enteredEmail,\r\n                    password: enteredPassword,\r\n                    returnSecureToken: true,\r\n                },\r\n            },\r\n            receiveData\r\n        );\r\n    };\r\n\r\n    //dynamic styles\r\n    let emailInput = `${'inputWrapper'} ${\r\n        enteredEmailHasError && 'invalid'\r\n    } ${focus.email && 'focus'}`;\r\n    let passwordInput = `${'inputWrapper'} ${\r\n        passwordHasError && 'invalid'\r\n    } ${focus.password && 'focus'}`;\r\n    let btn_signup = `${'btn'} ${'create-account'}`;\r\n    let btn_login = `${'btn'} ${'login'} ${\r\n        !formIsValid && 'invalidBtn'\r\n    }`;\r\n\r\n    return (\r\n        <StyledLoginWrapper>\r\n            <StyledLogin>\r\n                <div className={'wrapper'}>\r\n                    <Slider />\r\n                    <form className={'form'} onSubmit={submitHandler}>\r\n                        <h2> Login </h2>\r\n                        <div className={'form-control'}>\r\n                            <div className={emailInput}>\r\n                                <MdOutlineEmail className={'icon'} />\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className={`${'focus'} ${'invalid'}`}\r\n                                    onMouseEnter={emailMouseEnterHandler}\r\n                                    onMouseLeave={emailMouseLeaveHandler}\r\n                                    onChange={emailChangeHandler}\r\n                                    onBlur={emailBlurHandler}\r\n                                    value={enteredEmail}\r\n                                />\r\n                                {enteredEmailHasError && (\r\n                                    <small> {emailErrorMessage} </small>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className={'form-control'}>\r\n                            <div className={passwordInput}>\r\n                                <RiLockPasswordLine className={'icon'} />\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Senha\"\r\n                                    className={'focus'}\r\n                                    onMouseEnter={passwordEnterHandler}\r\n                                    onMouseLeave={passwordLeaveHandler}\r\n                                    onChange={passwordChangeHandler}\r\n                                    onBlur={passwordBlurHandler}\r\n                                    value={enteredPassword}\r\n                                />\r\n                                {passwordHasError && (\r\n                                    <small> {passwordErrorMessage} </small>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <motion.button\r\n                            whileTap={{ scale: 0.9 }}\r\n                            className={`${btn_login}`}\r\n                        >\r\n                            {!isLoading && (\r\n                                <Fragment>\r\n                                    Entrar <BsArrowRightCircle />\r\n                                </Fragment>\r\n                            )}\r\n                            {isLoading && (\r\n                                <Fragment>\r\n                                    Loading... <BsArrowRightCircle />\r\n                                </Fragment>\r\n                            )}\r\n                        </motion.button>\r\n                        <p>or</p>\r\n                        <Link to=\"/signup\">\r\n                            <motion.button\r\n                                whileTap={{ scale: 0.9 }}\r\n                                className={btn_signup}\r\n                            >\r\n                                Criar conta <AiOutlinePlusCircle />\r\n                            </motion.button>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </StyledLogin>\r\n            <Footer className={'footer'} />\r\n        </StyledLoginWrapper>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPagination = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    .pagination__pages {\r\n        cursor: pointer;\r\n        text-align: center;\r\n        transition: 0.4s ease-in-out;\r\n        background: rgb(9, 74, 130);\r\n        border: 1px solid rgb(253, 250, 250);\r\n        text-decoration: none;\r\n        padding: 15px 15px;\r\n        color: white;\r\n        &.pagination__active {\r\n            background: rgb(61, 143, 214);\r\n        }\r\n\r\n        &:hover {\r\n            background: rgb(61, 143, 214);\r\n        }\r\n    }\r\n`;\r\n","// import classes from './styles/Pagination.module.css';\r\nimport { StyledPagination } from './styles/Pagination.styled';\r\n\r\ninterface IPagination {\r\n    postsPerPage: number;\r\n    currentPage: number;\r\n    totalPosts: number;\r\n    paginate: (a: number) => number;\r\n    maxPageNumberLimit: number;\r\n    minPageNumberLimit: number;\r\n}\r\n\r\nconst Pagination = (props: IPagination) => {\r\n    const pageNumbers = [];\r\n\r\n    for (\r\n        let i = 1;\r\n        i <= Math.ceil(props.totalPosts / props.postsPerPage);\r\n        i++\r\n    ) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <StyledPagination>\r\n            {pageNumbers.map(number => {\r\n                if (\r\n                    number < props.maxPageNumberLimit + 1 &&\r\n                    number > props.minPageNumberLimit\r\n                ) {\r\n                    return (\r\n                        <li\r\n                            key={number}\r\n                            className={`${'pagination__pages'} ${\r\n                                number === props.currentPage &&\r\n                                'pagination__active'\r\n                            }`}\r\n                            onClick={() => props.paginate(number)}\r\n                        >\r\n                            {number}\r\n                        </li>\r\n                    );\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n        </StyledPagination>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPaginationWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 60px;\r\n\r\n    .pages {\r\n        transition: 0.4s ease-in-out;\r\n        height: 51px;\r\n        width: 41px;\r\n        text-align: center;\r\n        line-height: 50px;\r\n        border: 1px solid rgb(253, 250, 250);\r\n        background: rgb(9, 74, 130);\r\n        &:hover {\r\n            background: rgb(61, 143, 214);\r\n        }\r\n        button {\r\n            background: none;\r\n            color: white;\r\n            border: none;\r\n            height: 100%;\r\n            width: 100%;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n","// import classes from './styles/Pagination.module.css';\r\nimport Pagination from './Pagination';\r\nimport Button from './Button';\r\nimport { StyledPaginationWrapper } from './styles/PaginationWrapper.styled';\r\n\r\ninterface IPaginationWrapper {\r\n    pageDecrementBtn: any;\r\n    minPageNumberLimit: any;\r\n    maxPageNumberLimit: number;\r\n    currentPage: number;\r\n    postPerPage: number;\r\n    totalPosts: any;\r\n    pageIncrementBtn: any;\r\n    prevPageHandler: () => void;\r\n    nextPageHandler: () => void;\r\n    paginate: (a: number) => number;\r\n}\r\n\r\nconst PaginationWrapper = (props: IPaginationWrapper) => {\r\n    return (\r\n        <StyledPaginationWrapper>\r\n            <li className={'pages'}>\r\n                <Button onClick={props.prevPageHandler}>Prev </Button>\r\n            </li>\r\n            {props.pageDecrementBtn}\r\n            <Pagination\r\n                minPageNumberLimit={props.minPageNumberLimit}\r\n                maxPageNumberLimit={props.maxPageNumberLimit}\r\n                currentPage={props.currentPage}\r\n                paginate={props.paginate}\r\n                postsPerPage={props.postPerPage}\r\n                totalPosts={props.totalPosts}\r\n            />\r\n            {props.pageIncrementBtn}\r\n            <li className={'pages'}>\r\n                <Button onClick={props.nextPageHandler}>Next </Button>\r\n            </li>\r\n        </StyledPaginationWrapper>\r\n    );\r\n};\r\n\r\nexport default PaginationWrapper;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledListItem = styled.div`\r\n    .item__english {\r\n        border-bottom: 1px dashed rgb(141, 141, 141);\r\n        margin-bottom: 5px;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        padding: 20px 5px;\r\n\r\n        .item__phrasal-verb {\r\n            font-weight: bolder;\r\n            color: rgb(9, 74, 130);\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        .item__english-example {\r\n            font-size: 1rem;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            width: 100%;\r\n            color: rgb(3, 139, 189);\r\n\r\n            .item__english-text-examples {\r\n                & :not(:last-child) {\r\n                    margin-bottom: 10px;\r\n                }\r\n            }\r\n\r\n            .item__drop {\r\n                font-size: 30px;\r\n                width: 50px;\r\n                color: black;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n\r\n    .item__portuguese {\r\n        font-size: 1rem;\r\n        transition: 0.1s ease-in-out;\r\n        opacity: 1;\r\n        // color: rgb(238, 96, 96);\r\n        color: rgb(95, 95, 95);\r\n        border-bottom: 1px dashed red;\r\n        padding: 20px 5px;\r\n        & :not(:last-child) {\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        &.item__hide {\r\n            transition: 0.1s ease-in-out;\r\n            // position: relative;\r\n            // visibility: hidden;\r\n            height: 0;\r\n            padding: 0 10px;\r\n            // z-index: -4;\r\n            opacity: 0;\r\n            transform: translateY(-100%);\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { MdOutlineKeyboardArrowDown } from 'react-icons/md';\r\nimport { MdOutlineKeyboardArrowUp } from 'react-icons/md';\r\n// import classes from \"./styles/ListItem.module.css\";\r\nimport { StyledListItem } from './styles/ListItem.styled';\r\n\r\ninterface IListItem {\r\n    id: string;\r\n    currentId: string;\r\n    onDisplayTranslation: (e: React.FormEvent) => void;\r\n    onHideTranslation: (e: React.FormEvent) => void;\r\n    example_1: string;\r\n    example_2: string;\r\n    translation_1: string;\r\n    translation_2: string;\r\n    content: string;\r\n}\r\n\r\nconst ListItem = (props: IListItem) => {\r\n    const {\r\n        id,\r\n        currentId,\r\n        example_1,\r\n        example_2,\r\n        translation_1,\r\n        translation_2,\r\n        content,\r\n        onDisplayTranslation,\r\n        onHideTranslation,\r\n    } = props;\r\n\r\n    return (\r\n        <StyledListItem>\r\n            <li className=\"item__english\">\r\n                <div className=\"item__phrasal-verb\">{content}</div>\r\n                <div className=\"item__english-example\">\r\n                    <div className=\"item__english-text-examples\">\r\n                        <p>1 - {example_1} </p>\r\n                        <p>2 - {example_2} </p>\r\n                    </div>\r\n                    {id !== currentId && (\r\n                        <MdOutlineKeyboardArrowDown\r\n                            className=\"item__drop\"\r\n                            onClick={onDisplayTranslation}\r\n                            id={id}\r\n                        />\r\n                    )}\r\n\r\n                    {id === currentId && (\r\n                        <MdOutlineKeyboardArrowUp\r\n                            className=\"item__drop\"\r\n                            onClick={onHideTranslation}\r\n                            id={id}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </li>\r\n            <li\r\n                className={`${'item__portuguese'} ${\r\n                    id !== currentId && 'item__hide'\r\n                }`}\r\n            >\r\n                <p>1 - {translation_1}</p>\r\n                <p>2 - {translation_2} </p>\r\n            </li>\r\n        </StyledListItem>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import ListItem from './ListItem';\r\nimport { Fragment } from 'react';\r\n\r\ninterface Iprops {\r\n    currentPosts: any;\r\n    currentTransationId: string;\r\n    displayTranslation: (e: React.FormEvent) => void;\r\n    hideTranslation: (e: React.FormEvent) => void;\r\n}\r\n\r\nconst ListItemWrapper = (props: Iprops) => {\r\n    const {\r\n        currentPosts,\r\n        currentTransationId,\r\n        displayTranslation,\r\n        hideTranslation,\r\n    } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            {currentPosts.map((item: any, index: any) => {\r\n                return (\r\n                    <ListItem\r\n                        content={item.content}\r\n                        id={item._id}\r\n                        key={item._id}\r\n                        onDisplayTranslation={displayTranslation}\r\n                        onHideTranslation={hideTranslation}\r\n                        example_1={item.example_1}\r\n                        example_2={item.example_2}\r\n                        translation_1={item.translation_1}\r\n                        translation_2={item.translation_2}\r\n                        currentId={currentTransationId}\r\n                    />\r\n                );\r\n            })}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListItemWrapper;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSocialMedia = styled.div`   \r\n    position: fixed;\r\n    z-index: 3;\r\n    right: 0;\r\n    bottom: 10%;\r\n    padding: 20px 10px;\r\n    background: rgb(70, 70, 70);\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    & :not(:last-child) {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .icon {\r\n        height: 35px;\r\n        width: 35px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: 1px solid rgb(109, 109, 109);\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        svg {\r\n            font-size: 25px;\r\n            color: white;\r\n        }\r\n\r\n        &.whatsapp {\r\n            background: rgb(32, 201, 32);\r\n            border: 1px solid rgb(136, 236, 136);\r\n        }\r\n        &.linkedin {\r\n            background: rgb(0, 130, 206);\r\n            border: 1px solid rgb(113, 201, 252);\r\n        }\r\n    }\r\n`","// import classes from './styles/SocialMedia.module.css';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { AiOutlineWhatsApp } from 'react-icons/ai';\r\nimport { AiFillLinkedin } from 'react-icons/ai';\r\nimport { StyledSocialMedia } from './styles/SocialMedia.styled';\r\n\r\nconst SocialMedia = () => {\r\n    return (\r\n        <StyledSocialMedia>\r\n            <a\r\n                href=\"https://github.com/VictorLira-DEV\"\r\n                target=\"_blank\"\r\n                className=\"icon\"\r\n            >\r\n                <AiFillGithub />\r\n            </a>\r\n            <a\r\n                href=\"https://api.whatsapp.com/send?phone=5527996483376\"\r\n                target=\"blank\"\r\n                className={`${['icon']} ${['whatsapp']}`}\r\n            >\r\n                <AiOutlineWhatsApp />\r\n            </a>\r\n            <a\r\n                href=\"https://www.linkedin.com/in/victor-lira-front-end/\"\r\n                target=\"_blank\"\r\n                className={`${['icon']} ${['linkedin']} `}\r\n            >\r\n                <AiFillLinkedin />\r\n            </a>\r\n        </StyledSocialMedia>\r\n    );\r\n};\r\n\r\nexport default SocialMedia;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledItemCounter = styled.p`\r\n    position: absolute;\r\n    top: -34px;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    span {\r\n        font-size: 1rem;\r\n        background: rgb(9, 74, 130);\r\n        color: rgb(252, 252, 252);\r\n        padding: 10px 10px 10px 10px;\r\n        font-weight: bold;\r\n        border-top-left-radius: 7px;\r\n        border-top-right-radius: 7px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n","import classes from './styles/ItemCounter.module.css';\r\nimport { StyledItemCounter } from './styles/ItemCounter.styled';\r\n\r\ninterface ItemCounter {\r\n    counter: number;\r\n    text: string;\r\n}\r\n\r\nconst ItemCounter = (props: ItemCounter) => {\r\n    return (\r\n        <StyledItemCounter>\r\n            <span>{`${props.counter}`}</span> {props.text}\r\n        </StyledItemCounter>\r\n    );\r\n};\r\n\r\nexport default ItemCounter;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledExpression = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 100px 0 200px 0;\r\n    min-height: 100vh;\r\n    position: relative;\r\n    .verbs-list{\r\n        position: relative;\r\n        width: 700px;\r\n        margin: 0 auto;\r\n        list-style: none;\r\n        transition: .3s ease-in-out;\r\n        border-top: 1px dashed rgb(146, 145, 145);\r\n        .btn-title{\r\n            border-top-left-radius: 20px;\r\n            border: none;\r\n            background: rgb(250, 187, 187);\r\n            color: rgb(255, 249, 249);\r\n            padding: 10px 15px;\r\n            font-size: 20px;\r\n            position: absolute;\r\n            right: 0;\r\n            top: -45px;\r\n        }\r\n\r\n        .navigatin-wrapper{\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            margin-top: 60px;\r\n\r\n            .pages{\r\n                // padding: 15px;\r\n                height: 51px;\r\n                width: 41px;\r\n                text-align: center;\r\n                line-height: 50px;\r\n                border: 1px solid rgb(253, 250, 250);\r\n                background: rgb(9, 74, 130);\r\n                &.pages-dots{\r\n                    color: white;\r\n                    font-size: 20px;\r\n                    height: 51px;\r\n                    width: 41px;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                button{\r\n                    background: none;\r\n                    color: white;\r\n                    border: none;\r\n                    height: 100%;\r\n                    width: 100%;\r\n                    cursor: pointer;\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    .footer{\r\n        position: absolute;\r\n        bottom: 0;\r\n        background: rgb(11, 91, 160);\r\n        color: white;\r\n        padding: 15px;\r\n    }\r\n\r\n    .pages{\r\n        height: 51px;\r\n        width: 41px;\r\n        text-align: center;\r\n        line-height: 50px;\r\n        border: 1px solid rgb(253, 250, 250);\r\n        background: rgb(9, 74, 130);\r\n        color: white;\r\n    }\r\n`","import { useEffect, useState, useContext } from 'react';\r\n// import classes from './styles/Expressions.module.css';\r\nimport Footer from '../components/Footer';\r\nimport Button from '../components/Button';\r\nimport PaginationWrapper from '../components/PaginationWrapper';\r\nimport ListItemWrapper from '../components/ListItemWrapper';\r\nimport useAxios from '../hooks/use-axios/useAxios';\r\nimport LoadSpinner from '../components/LoadSpinner';\r\nimport { StickyHeaderContext } from '../context/sticky-header/stickyHeader';\r\nimport SocialMedia from '../components/SocialMedia';\r\nimport ItemCounter from '../components/ItemCounter';\r\nimport { StyledExpression } from './styles/Expressions.styled';\r\n\r\nconst Expressions = () => {\r\n    const [currentTransationId, setCurrentTranslationId] = useState('');\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage] = useState(10);\r\n    const [pageNumberLimit] = useState(5);\r\n    const { sendRequest, hasError, isLoading, setHasError } = useAxios();\r\n    const [expressions, setExpressions] = useState([]);\r\n\r\n    const headerCtx = useContext(StickyHeaderContext);\r\n    headerCtx.intersectingFunction(false);\r\n\r\n    useEffect(() => {\r\n        const receivedData = function (data: any) {\r\n            setExpressions(data.data);\r\n        };\r\n\r\n        sendRequest(\r\n            {\r\n                url: 'https://english-for-devs-heroku.herokuapp.com/expressions',\r\n            },\r\n            receivedData\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(currentPage);\r\n    }, [currentPage]);\r\n    //get current posts\r\n\r\n    const indexOfLastPosts = currentPage * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPosts - postPerPage;\r\n    const currentPosts = expressions.slice(indexOfFirstPost, indexOfLastPosts);\r\n\r\n    //change page\r\n    const paginate = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber);\r\n        return currentPage;\r\n    };\r\n\r\n    const displayTranslation = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setCurrentTranslationId(e.currentTarget.id);\r\n    };\r\n\r\n    const hideTranslation = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setCurrentTranslationId('');\r\n    };\r\n\r\n    const nextPageHandler = () => {\r\n        if (currentPage === Math.ceil(expressions.length / postPerPage)) return;\r\n        setCurrentPage(currentPage + 1);\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const prevPageHandler = () => {\r\n        if (currentPage === 1) return;\r\n\r\n        setCurrentPage(currentPage - 1);\r\n        if ((currentPage - 1) % pageNumberLimit === 0) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    let pageIncrementBtn = null;\r\n    if (expressions.length > maxPageNumberLimit) {\r\n        pageIncrementBtn = (\r\n            <li onClick={nextPageHandler} className=\"pages\">\r\n                ...\r\n            </li>\r\n        );\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if (expressions.length > maxPageNumberLimit) {\r\n        pageDecrementBtn = (\r\n            <li onClick={prevPageHandler} className=\"pages\">\r\n                ...\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StyledExpression>\r\n            {isLoading && <LoadSpinner />}\r\n            {!isLoading && (\r\n                <ul className={'verbs-list'}>\r\n                    <ItemCounter\r\n                        counter={expressions.length}\r\n                        text=\"Expressões Disponíveis\"\r\n                    />\r\n                    <Button className={'btn-title'}>Expressions</Button>\r\n                    <ListItemWrapper\r\n                        currentPosts={currentPosts}\r\n                        currentTransationId={currentTransationId}\r\n                        displayTranslation={displayTranslation}\r\n                        hideTranslation={hideTranslation}\r\n                    />\r\n\r\n                    <PaginationWrapper\r\n                        minPageNumberLimit={minPageNumberLimit}\r\n                        maxPageNumberLimit={maxPageNumberLimit}\r\n                        currentPage={currentPage}\r\n                        pageDecrementBtn={pageDecrementBtn}\r\n                        pageIncrementBtn={pageIncrementBtn}\r\n                        postPerPage={postPerPage}\r\n                        totalPosts={expressions.length}\r\n                        prevPageHandler={prevPageHandler}\r\n                        paginate={paginate}\r\n                        nextPageHandler={nextPageHandler}\r\n                    />\r\n                </ul>\r\n            )}\r\n            <Footer className={'footer'} />\r\n            <SocialMedia />\r\n        </StyledExpression>\r\n    );\r\n};\r\n\r\nexport default Expressions;\r\n","export default __webpack_public_path__ + \"static/media/profile-default.642eb204.png\";","import styled from 'styled-components';\r\n\r\nexport const StyledProfile = styled.div`\r\n    min-height: calc(100vh - (70px + 58px));\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    padding: 100px 20px;\r\n    color: rgb(143, 142, 142);\r\n    .profile_wraper {\r\n        width: 400px;\r\n        border: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding: 40px;\r\n        height: auto;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 0px 14px rgba(0, 0, 0, 0.2);\r\n        .profile {\r\n            width: 100%;\r\n            img {\r\n                width: 100px;\r\n                border-radius: 50%;\r\n                margin-bottom: 10px;\r\n            }\r\n            margin-bottom: 20px;\r\n\r\n            p {\r\n                &:not(:last-child) {\r\n                    margin-bottom: 5px;\r\n                    color: rgb(122, 122, 122);\r\n                }\r\n\r\n                &:last-child {\r\n                    margin-top: 20px;\r\n                }\r\n            }\r\n\r\n            p:nth-of-type(2) {\r\n                &::before {\r\n                    content: '';\r\n                    display: inline-block;\r\n                    width: 15px;\r\n                    height: 15px;\r\n                    background: rgb(0, 255, 55);\r\n                    border-radius: 50%;\r\n                    margin-bottom: -2px;\r\n                }\r\n            }\r\n        }\r\n\r\n        form {\r\n            padding: 10px;\r\n\r\n            h2 {\r\n                margin-bottom: 20px;\r\n                color: rgb(143, 142, 142);\r\n            }\r\n            .formControl {\r\n                margin-bottom: 30px;\r\n                .input {\r\n                    display: block;\r\n                    padding: 10px;\r\n                    width: 100%;\r\n                    border: 1px solid #ccc;\r\n                    margin-top: 5px;\r\n                    font-size: 16px;\r\n                    &.invalid {\r\n                        background: rgb(255, 228, 228);\r\n                        border: 1px solid red;\r\n                    }\r\n                    &:focus {\r\n                        background: rgb(224, 241, 248);\r\n                        outline-color: rgb(95, 210, 255);\r\n                    }\r\n                }\r\n\r\n                small {\r\n                    position: absolute;\r\n                    color: red;\r\n                }\r\n\r\n                &.invalid {\r\n                    .input {\r\n                        background: rgb(255, 228, 228);\r\n                        border: 1px solid red;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .button {\r\n                border: none;\r\n                font-size: inherit;\r\n                border-radius: 5px;\r\n                cursor: pointer;\r\n                box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);\r\n                transition: 0.3s ease-in-out;\r\n                text-transform: uppercase;\r\n                font-weight: bolder;\r\n                font-size: 14px;\r\n                letter-spacing: 1px;\r\n                color: white;\r\n                width: 100%;\r\n                background: rgb(2, 127, 239);\r\n                height: 40px;\r\n                margin-top: 20px;\r\n                &.invalidBtn {\r\n                    background: #ccc;\r\n                    cursor: not-allowed;\r\n                    &:hover {\r\n                        background: rgb(194, 194, 194);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledProfileWrapper = styled.section`\r\n    .footer {\r\n        padding: 15px 60px;\r\n        background: rgb(11, 91, 160);\r\n        color: white;\r\n        bottom: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n","import Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport useInput from '../hooks/use-input/useInput';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../context/auth-context/auth-context';\r\n// import { useHistory } from \"react-router\";\r\nimport useAxios from '../hooks/use-axios/useAxios';\r\nimport Footer from '../components/Footer';\r\n// import classes from './styles/Profile.module.css';\r\nimport profile_picture from '../assets/profile-default.png';\r\nimport { StickyHeaderContext } from '../context/sticky-header/stickyHeader';\r\nimport { StyledProfile, StyledProfileWrapper} from './styles/Profile.styled'\r\n\r\nconst Profile = () => {\r\n    const authCtx = useContext(AuthContext);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    // const history = useHistory();\r\n    const { sendRequest, isLoading, hasError } = useAxios();\r\n\r\n    const headerCtx = useContext(StickyHeaderContext);\r\n    headerCtx.intersectingFunction(false);\r\n\r\n    //password\r\n    const validatePassword = (value: string) => {\r\n        return {\r\n            isValid: value.trim().length > 7,\r\n            errorMessage: 'A senha deve conter pelo menos 8 caracteres',\r\n        };\r\n    };\r\n\r\n    const {\r\n        inputBlurHandler: passwordBlurHandler,\r\n        valueChangeHandler: passwordChangeHandler,\r\n        reset: resetPassword,\r\n        hasError: passwordHasError,\r\n        isValid: passwordIsValid,\r\n        value: enteredPasswordValue,\r\n        errorMessage: passwordErrorMessage,\r\n    } = useInput(validatePassword);\r\n\r\n    //password check\r\n    const validatePasswordCheck = (value: string) => {\r\n        return {\r\n            isValid: value === enteredPasswordValue,\r\n            errorMessage: 'As senhas devem ser iguais',\r\n        };\r\n    };\r\n\r\n    const {\r\n        inputBlurHandler: passwordCheckBlurHandler,\r\n        valueChangeHandler: passwordCheckChangeHandler,\r\n        reset: resetPasswordCheck,\r\n        hasError: passwordCheckHasError,\r\n        isValid: passwordCheckIsValid,\r\n        value: enteredPasswordCheckValue,\r\n        errorMessage: passwordCheckErrorMessage,\r\n    } = useInput(validatePasswordCheck);\r\n\r\n    const onSubmitHandler = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        if (formIsValid !== true) return;\r\n        const enteredNewPassword = enteredPasswordValue;\r\n        if (hasError) {\r\n            alert('something went wrong try again later');\r\n            return;\r\n        }\r\n        const receiveData = (data: any) => {\r\n            resetPassword();\r\n            resetPasswordCheck();\r\n        };\r\n\r\n        sendRequest(\r\n            {\r\n                url: 'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDhdPtWod30lodKdyjn-U5_DX8rClCz3vw',\r\n                method: 'post',\r\n                data: {\r\n                    idToken: authCtx.token,\r\n                    password: enteredNewPassword,\r\n                    returnSecureToken: false,\r\n                },\r\n            },\r\n            receiveData\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormIsValid(passwordIsValid && passwordCheckIsValid);\r\n    }, [passwordIsValid, passwordCheckIsValid]);\r\n\r\n    return (\r\n        <StyledProfileWrapper>\r\n            <StyledProfile>\r\n                <div className={'profile_wraper'}>\r\n                    <div className={'profile'}>\r\n                        <img src={profile_picture} alt=\"profile\" />\r\n                        <p>user</p>\r\n                        <p> Online </p>\r\n                        {/* <p>sua sessão acabará em 121232 </p> */}\r\n                    </div>\r\n                    <form onSubmit={onSubmitHandler}>\r\n                        <h2>Mudar a senha</h2>\r\n                        <div\r\n                            className={`${'formControl'} ${\r\n                                passwordHasError && 'invalid'\r\n                            }`}\r\n                        >\r\n                            <label>Nova senha</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                onChange={passwordChangeHandler}\r\n                                onBlur={passwordBlurHandler}\r\n                                value={enteredPasswordValue}\r\n                                className={'input'}\r\n                            />\r\n                            {passwordHasError && (\r\n                                <small> {passwordErrorMessage} </small>\r\n                            )}\r\n                        </div>\r\n                        <div className={'formControl'}>\r\n                            <label>Confirme a senha</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                onChange={passwordCheckChangeHandler}\r\n                                onBlur={passwordCheckBlurHandler}\r\n                                value={enteredPasswordCheckValue}\r\n                                className={'input'}\r\n                            />\r\n                            {passwordCheckHasError && (\r\n                                <small> {passwordCheckErrorMessage} </small>\r\n                            )}\r\n                        </div>\r\n\r\n                        <Button\r\n                            className={`${'button'} ${\r\n                                !formIsValid && 'invalidBtn'\r\n                            }`}\r\n                        >\r\n                            {isLoading ? <p>isLoading...</p> : <p>Enviar</p>}\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </StyledProfile>\r\n            <Footer className={'footer'} />\r\n        </StyledProfileWrapper>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPopUp = styled.div`\r\n    & > div {\r\n        position: fixed;\r\n        z-index: 3;\r\n        background: white;\r\n        border-radius: 4px;\r\n\r\n        right: 50%;\r\n        bottom: 50%;\r\n        // transform: translate(50%, 50%) !important;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledBackdrop = styled.div`\r\n    & > div {\r\n        background: rgba(0, 0, 0, 0.5);\r\n        position: fixed;\r\n        // height: 100vh;\r\n        // width: 100vw;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 2;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { StyledBackdrop, StyledPopUp } from './styles/PopUp.styled';\r\n\r\nconst portalElement = document.getElementById('overlay')!;\r\n\r\ninterface IPopUp {\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\ninterface IModalOverlay {\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n    onBackdropClick?: (event: React.FormEvent) => void;\r\n}\r\n\r\ninterface IBackDrop {\r\n    onClick?: (event: React.FormEvent) => void;\r\n}\r\n\r\nconst dropIn = {\r\n    hidden: {\r\n        y: '-100vh',\r\n        x: '50%',\r\n        opacity: 0,\r\n    },\r\n    visible: {\r\n        y: '50%',\r\n        x: '50%',\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.1,\r\n            type: 'spring',\r\n            damping: 25,\r\n            stiffness: 500,\r\n        },\r\n    },\r\n    exit: {\r\n        y: '100vh',\r\n\r\n        opacity: 0,\r\n    },\r\n};\r\n\r\nconst Backdrop = (props: IBackDrop) => {\r\n    return (\r\n        <StyledBackdrop>\r\n            <motion.div\r\n                // className={classes.backdrop}\r\n                onClick={props.onClick}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n            />\r\n        </StyledBackdrop>\r\n    );\r\n};\r\n\r\nconst PopUp = (props: IPopUp) => {\r\n    return (\r\n        <StyledPopUp>\r\n            <motion.div\r\n                className={`${props.className}`}\r\n                variants={dropIn}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {props.children}\r\n            </motion.div>\r\n        </StyledPopUp>\r\n    );\r\n};\r\n\r\nconst ModalOverlay = (props: IModalOverlay) => {\r\n    return (\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(\r\n                <Backdrop onClick={props.onBackdropClick} />,\r\n                portalElement\r\n            )}\r\n            {ReactDOM.createPortal(\r\n                <PopUp className={props.className}>{props.children} </PopUp>,\r\n                portalElement\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledModalSuccess = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    .success {\r\n        background: rgb(71, 202, 162);\r\n        height: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        color: white;\r\n        #success_icon {\r\n            font-size: 70px;\r\n            border-radius: 50%;\r\n            border: 2px solid white;\r\n        }\r\n\r\n        #close_icon {\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 10px;\r\n            font-size: 30px;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    .success_message {\r\n        height: 50%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: rgb(77, 80, 89);\r\n        .main_message {\r\n            font-size: 30px;\r\n        }\r\n\r\n        .second_message {\r\n            margin: 10px 0 20px 0;\r\n        }\r\n\r\n        button {\r\n            border: none;\r\n            border-radius: 20px;\r\n            padding: 10px 20px;\r\n            background: rgb(241, 182, 18);\r\n            color: white;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            transition: 0.3s ease-in-out;\r\n            &:hover {\r\n                background: rgb(221, 166, 16);\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import ModalOverlay from './PopUp';\r\n// import classes from './styles/ModalOverlay.module.css';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport { RiCloseFill } from 'react-icons/ri';\r\nimport Button from './Button';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledModalSuccess } from './styles/ModalSuccess.styled';\r\n\r\ninterface IModalSuccess {\r\n    onCloseModal?: (a: React.FormEvent) => void;\r\n    onBackdropClick: (event: React.FormEvent) => void;\r\n    title: string;\r\n    message: string;\r\n    btnText: string;\r\n}\r\n\r\nconst ModalSuccess = (props: IModalSuccess) => {\r\n    const { btnText, title, message, onBackdropClick, onCloseModal } = props;\r\n\r\n    return (\r\n        <ModalOverlay onBackdropClick={onBackdropClick}>\r\n            <StyledModalSuccess>\r\n                <div className=\"success\">\r\n                    <MdCheck id=\"success_icon\" />\r\n                    <RiCloseFill id=\"close_icon\" onClick={onCloseModal} />\r\n                </div>\r\n                <div className=\"success_message\">\r\n                    <p className=\"main_message\"> {title} </p>\r\n                    <p className=\"second_message\">{message}</p>\r\n                    <Link to=\"/\">\r\n                        <Button className=\"button\">{btnText}</Button>\r\n                    </Link>\r\n                </div>\r\n            </StyledModalSuccess>\r\n        </ModalOverlay>\r\n    );\r\n};\r\n\r\nexport default ModalSuccess;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledModalError = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    .error {\r\n        background: rgb(238, 85, 85);\r\n        height: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        color: white;\r\n        #error_icon {\r\n            font-size: 70px;\r\n            border-radius: 50%;\r\n            border: 2px solid white;\r\n        }\r\n\r\n        #close_icon {\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 10px;\r\n            font-size: 30px;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    .error_message {\r\n        height: 50%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: rgb(77, 80, 89);\r\n        .main_message {\r\n            font-size: 30px;\r\n        }\r\n\r\n        .second_message {\r\n            margin: 10px 0 20px 0;\r\n        }\r\n\r\n        button {\r\n            border: none;\r\n            border-radius: 20px;\r\n            padding: 10px 20px;\r\n            background: rgb(241, 182, 18);\r\n            color: white;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            transition: 0.3s ease-in-out;\r\n            &:hover {\r\n                background: rgb(221, 166, 16);\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import ModalOverlay from './PopUp';\r\n// import classes from './styles/ModalError.module.css';\r\nimport { MdOutlineError } from 'react-icons/md';\r\nimport { RiCloseFill } from 'react-icons/ri';\r\nimport Button from './Button';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledModalError } from './styles/ModalError,styled'\r\n\r\ninterface IModalError {\r\n    onBackdropClick: (event: React.FormEvent) => void;\r\n    onCloseModal: (event: React.FormEvent) => void;\r\n    title: string;\r\n    message: string;\r\n    btnText: string;\r\n}\r\nconst ModalError = (props: IModalError) => {\r\n    const {message, btnText, title, onBackdropClick, onCloseModal } = props\r\n\r\n    return (\r\n        <ModalOverlay onBackdropClick={onBackdropClick}>\r\n            <StyledModalError>\r\n                <div className='error'>\r\n                    <MdOutlineError id='error_icon' />\r\n                    <RiCloseFill\r\n                        id='close_icon'\r\n                        onClick={onCloseModal}\r\n                    />\r\n                </div>\r\n                <div className='error_message'>\r\n                    <p className='main_message'> { title } </p>\r\n                    <p className='second_message'>\r\n                        { message }\r\n                    </p>\r\n                    <Link to=\"/\">\r\n                        <Button className='button'> { btnText } </Button>\r\n                    </Link>\r\n                </div>\r\n            </StyledModalError>\r\n        </ModalOverlay>\r\n    );\r\n};\r\n\r\nexport default ModalError;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledRegistrationWrapper = styled.div`\r\n    footer{\r\n        padding: 30px 60px;\r\n        background: linear-gradient(rgb(131, 214, 214), rgb(61, 99, 153));\r\n    }\r\n`\r\n\r\nexport const StyledRegistration = styled.div`\r\n    width: 100vw;\r\n    overflow-x: hidden;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    // background: rgb(189, 255, 255);\r\n    background: linear-gradient(rgb(9, 74, 130), rgb(131, 214, 214));\r\n    max-width: 1440px;\r\n    padding: 40px 20px;\r\n    height: calc(100vh - 98px) ;\r\n    // filter: blur(2px);\r\n\r\n    img {\r\n        width: 30%;\r\n        align-self: flex-end;\r\n    }\r\n\r\n    .img{\r\n        width: 50%;\r\n        align-self: flex-end;\r\n    }\r\n    .form {\r\n        width: 400px;\r\n        min-width: 400px;\r\n        border: 1px solid #ccc;\r\n        padding: 30px 40px 40px 40px;\r\n        background: white;\r\n        border-top-right-radius: 5px;\r\n        border-bottom-right-radius: 5px;\r\n        border-radius: 4px;\r\n        box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.3);\r\n        align-self: flex-end;\r\n        h1 {\r\n            font-size: 1.6rem;\r\n            margin-bottom: 30px;\r\n            text-align: center;\r\n        }\r\n\r\n        .form-control {\r\n            padding-bottom: 40px;\r\n            color: rgb(121, 121, 121);\r\n            position: relative;\r\n            .input {\r\n                display: block;\r\n                padding: 10px;\r\n                width: 100%;\r\n                border: 1px solid #ccc;\r\n                margin-top: 5px;\r\n                font-size: 16px;\r\n                &.invalid{\r\n                    background: rgb(255, 228, 228);\r\n                    border: 1px solid red;\r\n                }\r\n                &:focus {\r\n                    background: rgb(224, 241, 248);\r\n                    outline-color: rgb(95, 210, 255);\r\n                }\r\n            }\r\n            small{\r\n                color: red;\r\n                position: absolute;\r\n            }\r\n        }\r\n\r\n        button {\r\n            border: none;\r\n            font-size: inherit;\r\n            border-radius: 5px;\r\n            cursor: pointer;\r\n            box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.5);\r\n            transition: 0.3s ease-in-out;\r\n            text-transform: uppercase;\r\n            font-weight: bolder;\r\n            font-size: 14px;\r\n            letter-spacing: 1px;\r\n            width: 100%;\r\n            color: white;\r\n            width: 100%;\r\n            background: rgb(2, 127, 239);\r\n            height: 40px;\r\n            margin-top: 20px;\r\n            &:hover {\r\n                background: rgb(59, 157, 243);\r\n            }\r\n\r\n            &.invalid{\r\n                background: rgb(194, 194, 194);\r\n                cursor: not-allowed ;\r\n            }\r\n        }\r\n    }\r\n`","import Input from '../components/Input';\r\n// import classes from './styles/Registration.module.css';\r\nimport Button from '../components/Button';\r\nimport Footer from '../components/Footer';\r\nimport React, { useState, useEffect } from 'react';\r\nimport useInput from '../hooks/use-input/useInput';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAxios from '../hooks/use-axios/useAxios';\r\nimport ModalSuccess from '../components/ModalSuccess';\r\nimport ModalError from '../components/ModalError';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport {\r\n    StyledRegistration,\r\n    StyledRegistrationWrapper,\r\n} from './styles/Registration.styled';\r\n\r\nconst Registration = () => {\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const history = useHistory();\r\n    const { sendRequest, isLoading, hasError } = useAxios();\r\n    console.log(hasError);\r\n    //USERNAME\r\n    const usernameValidation = (value: string) => {\r\n        return {\r\n            isValid: value.trim().length > 7,\r\n            errorMessage: 'Username deve conter pelo menos 8 caracteres',\r\n        };\r\n    };\r\n\r\n    const {\r\n        value: enteredUsername,\r\n        isValid: enteredNameIsValid,\r\n        errorMessage: usernameErrorMessage,\r\n        hasError: usernameHasError,\r\n        inputBlurHandler: usernameBlurHander,\r\n        valueChangeHandler: usernameChangeHandler,\r\n        reset: resetNameInput,\r\n    } = useInput(usernameValidation);\r\n\r\n    //EMAIL\r\n    const emailValidation = (value: string) => {\r\n        return {\r\n            isValid: value.trim().includes('@'),\r\n            errorMessage: 'E-mail invalido',\r\n        };\r\n    };\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: enteredEmailIsValid,\r\n        errorMessage: emailErrorMessage,\r\n        hasError: emailHasError,\r\n        inputBlurHandler: emailBlurHandler,\r\n        valueChangeHandler: emailChangeHandler,\r\n        reset: resetEmailInput,\r\n    } = useInput(emailValidation);\r\n\r\n    //PASSWORD\r\n    const passwordValidation = (value: string) => {\r\n        return {\r\n            isValid: value.trim().length > 7,\r\n            errorMessage: 'A senha deve conter pelo menos 8 caracteres',\r\n        };\r\n    };\r\n    const {\r\n        value: enteredPassword,\r\n        isValid: enteredPasswordIsValid,\r\n        errorMessage: passwordErrorMessage,\r\n        hasError: passswordHasError,\r\n        inputBlurHandler: passwordBlurHandler,\r\n        valueChangeHandler: passwordChangeHandler,\r\n        reset: resetPasswordInput,\r\n    } = useInput(passwordValidation);\r\n\r\n    //PASSWORD CHECK\r\n\r\n    const {\r\n        value: enteredPasswordCheck,\r\n        isValid: enteredPasswordCheckIsValid,\r\n        errorMessage: passwordCheckErrorMessage,\r\n        hasError: passwordCheckHasError,\r\n        inputBlurHandler: passwordCheckBlurHandler,\r\n        valueChangeHandler: passwordCheckChangeHandler,\r\n        reset: resetPasswordCheckInput,\r\n    } = useInput(passwordCheckValidation);\r\n\r\n    function passwordCheckValidation(value: string) {\r\n        return {\r\n            isValid: value === enteredPassword,\r\n            errorMessage: 'As senhas não são iguais',\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFormIsValid(\r\n            enteredPasswordCheckIsValid &&\r\n                enteredPasswordIsValid &&\r\n                enteredEmailIsValid &&\r\n                enteredNameIsValid\r\n        );\r\n    }, [\r\n        enteredPasswordCheckIsValid,\r\n        enteredPasswordIsValid,\r\n        enteredEmailIsValid,\r\n        enteredNameIsValid,\r\n    ]);\r\n\r\n    const formSubmitHandler = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        if (formIsValid !== true) return;\r\n        // setIsLoading(true);\r\n\r\n        const receiveData = (data: any) => {};\r\n        sendRequest(\r\n            {\r\n                method: 'post',\r\n                url: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDhdPtWod30lodKdyjn-U5_DX8rClCz3vw',\r\n                data: {\r\n                    email: enteredEmail,\r\n                    password: enteredPassword,\r\n                    returnSecureToken: true,\r\n                },\r\n            },\r\n            receiveData\r\n        );\r\n        setDisplayModal(true);\r\n    };\r\n\r\n    const clearInputField = () => {\r\n        resetNameInput();\r\n        resetEmailInput();\r\n        resetPasswordInput();\r\n        resetPasswordCheckInput();\r\n    };\r\n\r\n    //closeModal\r\n    const closeModal = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        setDisplayModal(false);\r\n\r\n        if (hasError) return;\r\n        clearInputField();\r\n        history.replace('/login');\r\n    };\r\n\r\n    //classes\r\n    const usernameClasses = `${'input'} ${usernameHasError && 'invalid'}`;\r\n\r\n    const emailClasses = `${'input'} ${emailHasError && 'invalid'}`;\r\n\r\n    const passwordClasses = `${'input'} ${passswordHasError && 'invalid'}`;\r\n\r\n    const passwordCheckClasses = `${'input'} ${\r\n        passwordCheckHasError && 'invalid'\r\n    }`;\r\n\r\n    return (\r\n        <StyledRegistrationWrapper>\r\n            <AnimatePresence\r\n                initial={false}\r\n                exitBeforeEnter={true}\r\n                onExitComplete={() => null}\r\n            >\r\n                {!hasError && displayModal && !isLoading && (\r\n                    <ModalSuccess\r\n                        title=\"Ótimo\"\r\n                        message=\"A sua conta foi criada com sucesso\"\r\n                        btnText=\"comece a explorar\"\r\n                        onCloseModal={closeModal}\r\n                        onBackdropClick={closeModal}\r\n                    />\r\n                )}\r\n            </AnimatePresence>\r\n            <AnimatePresence\r\n                initial={false}\r\n                exitBeforeEnter={true}\r\n                onExitComplete={() => null}\r\n            >\r\n                {hasError && displayModal && !isLoading && (\r\n                    <ModalError\r\n                        title=\"Erro de Autenticação\"\r\n                        message=\"Tente novamente mais tarde\"\r\n                        btnText=\"Home\"\r\n                        onBackdropClick={closeModal}\r\n                        onCloseModal={closeModal}\r\n                    />\r\n                )}\r\n            </AnimatePresence>\r\n\r\n            <StyledRegistration>\r\n                <img src=\"./1.svg\" alt=\"background\" />\r\n                <form onSubmit={formSubmitHandler} className=\"form\">\r\n                    <h1> Create account </h1>\r\n                    <div className=\"form-control\">\r\n                        <label className=\"label\">Username</label>\r\n                        <Input\r\n                            className={usernameClasses}\r\n                            type=\"text\"\r\n                            onChange={usernameChangeHandler}\r\n                            onBlur={usernameBlurHander}\r\n                            value={enteredUsername}\r\n                        />\r\n                        <small>\r\n                            {usernameHasError && usernameErrorMessage}{' '}\r\n                        </small>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label className=\"label\">E-mail</label>\r\n                        <Input\r\n                            className={emailClasses}\r\n                            type=\"email\"\r\n                            onChange={emailChangeHandler}\r\n                            onBlur={emailBlurHandler}\r\n                            value={enteredEmail}\r\n                        />\r\n                        <small>{emailHasError && emailErrorMessage} </small>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label className=\"label\">Password</label>\r\n                        <Input\r\n                            className={passwordClasses}\r\n                            type=\"password\"\r\n                            onBlur={passwordBlurHandler}\r\n                            onChange={passwordChangeHandler}\r\n                            value={enteredPassword}\r\n                        />\r\n                        <small>\r\n                            {passswordHasError && passwordErrorMessage}\r\n                        </small>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label className=\"label\">Password confirm</label>\r\n                        <Input\r\n                            className={passwordCheckClasses}\r\n                            type=\"password\"\r\n                            onChange={passwordCheckChangeHandler}\r\n                            onBlur={passwordCheckBlurHandler}\r\n                            value={enteredPasswordCheck}\r\n                        />\r\n                        <small>\r\n                            {passwordCheckHasError && passwordCheckErrorMessage}{' '}\r\n                        </small>\r\n                    </div>\r\n                    <Button className={`${!formIsValid && 'invalid'}`}>\r\n                        {!isLoading ? <p>Submit </p> : <p>Loading...</p>}\r\n                    </Button>\r\n                </form>\r\n                <img src=\"./social.svg\" alt=\"social\" />\r\n            </StyledRegistration>\r\n            <Footer />\r\n        </StyledRegistrationWrapper>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPhrasalVerbs = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 100px 0 200px 0;\r\n    min-height: 100vh;\r\n    position: relative;\r\n    .verbs-list {\r\n        position: relative;\r\n        width: 700px;\r\n        margin: 0 auto;\r\n        list-style: none;\r\n        transition: 0.3s ease-in-out;\r\n        border-top: 1px dashed rgb(146, 145, 145);\r\n        // box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.2);\r\n        .btn-title {\r\n            border-top-left-radius: 20px;\r\n            border: none;\r\n            background: rgb(250, 187, 187);\r\n            color: rgb(255, 249, 249);\r\n            padding: 10px 15px;\r\n            font-size: 20px;\r\n            position: absolute;\r\n            right: 0;\r\n            top: -45px;\r\n        }\r\n    }\r\n\r\n    .footer {\r\n        position: absolute;\r\n        bottom: 0;\r\n        background: rgb(11, 91, 160);\r\n        color: white;\r\n        padding: 15px;\r\n    }\r\n\r\n    .pages {\r\n        height: 51px;\r\n        width: 41px;\r\n        text-align: center;\r\n        line-height: 50px;\r\n        border: 1px solid rgb(253, 250, 250);\r\n        background: rgb(9, 74, 130);\r\n        color: white;\r\n    }\r\n`;\r\n","export function scrollUp(){\r\n    window.scroll(0, 0);\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\n// import classes from './styles/PhrasalVerbs.module.css';\r\nimport Footer from '../components/Footer';\r\nimport PaginationWrapper from '../components/PaginationWrapper';\r\nimport ListItemWrapper from '../components/ListItemWrapper';\r\nimport Button from '../components/Button';\r\nimport useAxios from '../hooks/use-axios/useAxios';\r\nimport LoadSpinner from '../components/LoadSpinner';\r\nimport { StickyHeaderContext } from '../context/sticky-header/stickyHeader';\r\nimport SocialMedia from '../components/SocialMedia';\r\nimport ItemCounter from '../components/ItemCounter';\r\nimport { StyledPhrasalVerbs } from './styles/PhrasalVerbs.styled';\r\nimport { scrollUp } from '../helper/scrollUp';\r\n\r\nconst PhrasalVerbs = () => {\r\n    const [currentTransationId, setCurrentTranslationId] = useState('');\r\n    const { sendRequest, isLoading, hasError } = useAxios();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage] = useState(10);\r\n    const [pageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n    const [phrasalVerbs, setPhrasalVerbs] = useState([]);\r\n    const headerCtx = useContext(StickyHeaderContext);\r\n\r\n    headerCtx.intersectingFunction(false);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(currentPage);\r\n    }, [currentPage]);\r\n    //get current posts\r\n\r\n    useEffect(() => {\r\n        const receivedData = function useCallback(data: any) {\r\n            setPhrasalVerbs(data.data);\r\n        };\r\n\r\n        sendRequest(\r\n            {\r\n                url: 'https://english-for-devs-heroku.herokuapp.com/read',\r\n            },\r\n            receivedData\r\n        );\r\n    }, []);\r\n\r\n    const indexOfLastPosts = currentPage * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPosts - postPerPage;\r\n    const currentPosts = phrasalVerbs.slice(indexOfFirstPost, indexOfLastPosts);\r\n\r\n    //change page\r\n    const paginate = (pageNumber: number) => {\r\n        scrollUp()\r\n        setCurrentPage(pageNumber);\r\n        return currentPage;\r\n    };\r\n\r\n    const displayTranslation = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setCurrentTranslationId(e.currentTarget.id);\r\n    };\r\n\r\n    const hideTranslation = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setCurrentTranslationId('');\r\n    };\r\n\r\n    const nextPageHandler = () => {\r\n        scrollUp()\r\n        if (currentPage === Math.ceil(phrasalVerbs.length / postPerPage))\r\n            return;\r\n        setCurrentPage(currentPage + 1);\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const prevPageHandler = () => {\r\n        scrollUp()\r\n        if (currentPage === 1) return;\r\n\r\n        setCurrentPage(currentPage - 1);\r\n        if ((currentPage - 1) % pageNumberLimit === 0) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    //paginationDots\r\n    let pageIncrementBtn = null;\r\n    if (phrasalVerbs.length > maxPageNumberLimit) {\r\n        pageIncrementBtn = (\r\n            <li onClick={nextPageHandler} className=\"pages\">\r\n                ...\r\n            </li>\r\n        );\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if (phrasalVerbs.length > maxPageNumberLimit) {\r\n        pageDecrementBtn = (\r\n            <li onClick={prevPageHandler} className=\"pages\">\r\n                ...\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <LoadSpinner />}\r\n            <StyledPhrasalVerbs>\r\n                {!isLoading && (\r\n                    <ul className=\"verbs-list\">\r\n                        <ItemCounter\r\n                            counter={phrasalVerbs.length}\r\n                            text=\"Verbos Disponíveis\"\r\n                        />\r\n                        <Button className=\"btn-title\">Phrasal Verbs</Button>\r\n                        <ListItemWrapper\r\n                            currentPosts={currentPosts}\r\n                            currentTransationId={currentTransationId}\r\n                            displayTranslation={displayTranslation}\r\n                            hideTranslation={hideTranslation}\r\n                        />\r\n\r\n                        <PaginationWrapper\r\n                            minPageNumberLimit={minPageNumberLimit}\r\n                            maxPageNumberLimit={maxPageNumberLimit}\r\n                            currentPage={currentPage}\r\n                            pageDecrementBtn={pageDecrementBtn}\r\n                            pageIncrementBtn={pageIncrementBtn}\r\n                            postPerPage={postPerPage}\r\n                            totalPosts={phrasalVerbs.length}\r\n                            prevPageHandler={prevPageHandler}\r\n                            paginate={paginate}\r\n                            nextPageHandler={nextPageHandler}\r\n                        />\r\n                    </ul>\r\n                )}\r\n                <Footer className=\"footer\" />\r\n            </StyledPhrasalVerbs>\r\n            <SocialMedia />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PhrasalVerbs;\r\n","import React, { Suspense } from 'react';\r\nimport Header from './components/Header';\r\nimport './global/styles/index.css';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from './context/auth-context/auth-context';\r\nimport LoadSpinner from './components/LoadSpinner';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Expressions from './pages/Expressions';\r\nimport Profile from './pages/Profile';\r\nimport Registration from './pages/Registration';\r\nimport PhrasalVerbs from './pages/PhrasalVerbs';\r\n//LAZY LOADING\r\n\r\n// const Home = React.lazy(() => import('./pages/Home'));\r\n// const Login = React.lazy(() => import('./pages/Login'));\r\n// const Expressions = React.lazy(() => import('./pages/Expressions'));\r\n// const Profile = React.lazy(() => import('./pages/Profile'));\r\n// const Registration = React.lazy(\r\n//     () => import('./pages/Registration')\r\n// );\r\n// const PhrasalVerbs = React.lazy(() => import('./pages/PhrasalVerbs'))\r\n\r\nfunction App() {\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <Suspense\r\n                fallback={\r\n                    <div className=\"centered\">\r\n                        <LoadSpinner />\r\n                    </div>\r\n                }\r\n            >\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/phrasal-verbs\">\r\n                        <PhrasalVerbs />\r\n                    </Route>\r\n                    {authCtx.isLoggedIn && (\r\n                        <Route path=\"/expressions\">\r\n                            <Expressions />\r\n                        </Route>\r\n                    )}\r\n                    {!authCtx.isLoggedIn && (\r\n                        <Route path=\"/login\">\r\n                            <Login />\r\n                        </Route>\r\n                    )}\r\n                    <Route path=\"/signup\">\r\n                        <Registration />\r\n                    </Route>\r\n                    {authCtx.isLoggedIn && (\r\n                        <Route path=\"/profile\">\r\n                            <Profile />\r\n                        </Route>\r\n                    )}\r\n                    <Route path=\"*\">\r\n                        <Redirect to=\"/\" />\r\n                    </Route>\r\n                </Switch>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport './global/styles/index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport StickyHeaderProvider from './context/sticky-header/stickyHeader';\r\nimport AuthContextProvider from './context/auth-context/auth-context';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <AuthContextProvider>\r\n        <StickyHeaderProvider>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </StickyHeaderProvider>\r\n    </AuthContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}